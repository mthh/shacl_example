@prefix ex: <http://example.com/ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .


ex:RectangleShape
	a sh:NodeShape ;
	sh:targetClass ex:Rectangle ;
	sh:property [
		sh:path ex:width ;
		sh:datatype xsd:integer ;
		sh:minCount 1 ;
		sh:maxCount 1 ;
	] ;
	sh:property [
		sh:path ex:height ;
		sh:datatype xsd:integer ;
		sh:minCount 1 ;
		sh:maxCount 1 ;
	] .

ex:multiply
	a sh:SPARQLFunction ;
	rdfs:comment "Multiplies its two arguments $op1 and $op2." ;
	sh:parameter [
		sh:path ex:op1 ;
		sh:datatype xsd:integer ;
		sh:description "The first operand" ;
	] ;
	sh:parameter [
		sh:path ex:op2 ;
		sh:datatype xsd:integer ;
		sh:description "The second operand" ;
	] ;
	sh:returnType xsd:integer ;
	sh:select """
		SELECT ($op1 * $op2 AS ?result)
		WHERE {
		}
		""" .

ex:RectangleRulesShape
	a sh:NodeShape ;
	sh:targetClass ex:Rectangle ;
	sh:rule [
		a sh:TripleRule ;
		sh:subject sh:this ;
		sh:predicate ex:area ;  # Computes the values of the ex:area property at the focus nodes
		sh:object [
			ex:multiply ( [ sh:path ex:width ] [ sh:path ex:height ] ) ;
		] ;
		sh:condition ex:RectangleShape ;  # Rule only applies to Rectangles that conform to ex:RectangleShape
	] .

ex:ClassificationRectangleRule
	a sh:NodeShape ;
	sh:targetClass ex:Rectangle ;
	sh:rule [
		a sh:SPARQLRule ;
		sh:construct """
		    prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
            prefix ex:  <http://example.com/ns#>

            CONSTRUCT {
                ?rect ex:has_category ?cat .
            } WHERE {
                {
                    SELECT (AVG(?_area) AS ?avg_area)
                    WHERE {
                        ?_rect ex:height ?_a ;
                              ex:width ?_b .
                        BIND(?_a * ?_b AS ?_area)
                    }
                }
                ?rect ex:height ?a ;
                      ex:width ?b .
                BIND(?a * ?b AS ?area) .
                BIND(IF(?a * ?b > ?avg_area, "BIG RECTANGLE !", "SMALL RECTANGLE !") AS ?cat).
            }
			""" ;
	] .
